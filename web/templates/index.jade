//- -*- Jade -*-
//- -*- coding: utf-8 -*-
//-
//- Alec Aivazis <alec@aivazis.com>
//- 
//- (c) 2014-2015 all rights reserved
//-

extends base

- load compress
- load staticfiles


append js

  {% compress js %}
  script(src="{% static 'thirdparty/jquery/dist/jquery.js' %}" type="text/javascript")
  script(src="{% static 'thirdparty/jquery-ui/jquery-ui.min.js' %}" type="text/javascript")
  script(src="{% static 'thirdparty/angular/angular.js' %}" type="text/javascript")
  script(src="{% static 'thirdparty/underscore/underscore.js' %}" type="text/javascript")
  {% endcompress %}
  script(src="http://gabelerner.github.io/canvg/rgbcolor.js" type="text/javascript")
  script(src="http://gabelerner.github.io/canvg/canvg.js" type="text/javascript")
  {% compress js %}
  script(src="{% static 'scripts/base64.js' %}" type="text/javascript")
  script(src="{% static 'thirdparty/FileSaver/FileSaver.js' %}" type="text/javascript")

  script(src="{% static 'thirdparty/snap.svg/dist/snap.svg.js' %}" type="text/javascript")
  script(type="text/javascript"
         src="{% static 'thirdparty/angular-bootstrap-colorpicker/js/bootstrap-colorpicker-module.js' %}")
  script(src="{% static 'angular-slider/slider.js' %}" type="text/javascript")
  script(src="{% static 'thirdparty/handlebars/handlebars.js' %}" type="text/javascript")
  script(src="{% static 'thirdparty/jquery-cookie/jquery.cookie.js' %}" type="text/javascript")
  script(src="{% static 'scripts/overlay.js' %}")

  script(src="{% static 'scripts/svgDataURL.coffee' %}", type="text/coffeescript")

  script(src="{% static 'scripts/Anchor.coffee' %}", type="text/coffeescript")
  script(src="{% static 'scripts/CircularConstraint.coffee' %}", type="text/coffeescript")
  script(src="{% static 'scripts/FeynmanCanvas.coffee' %}", type="text/coffeescript")
  script(src="{% static 'scripts/Line.coffee' %}", type="text/coffeescript")
  script(src="{% static 'scripts/Text.coffee' %}", type="text/coffeescript")

  script(src="{% static 'scripts/feynmanColorpicker.coffee' %}", type="text/coffeescript")
  script(src="{% static 'scripts/UndoEntry.coffee' %}", type="text/coffeescript")
  script(src="{% static 'scripts/UndoMulti.coffee' %}", type="text/coffeescript")
  script(src="{% static 'scripts/undo.coffee' %}", type="text/coffeescript")
  script(src="{% static 'scripts/toolbar.coffee' %}", type="text/coffeescript")

  script(src="{% static 'scripts/app.coffee' %}", type="text/coffeescript")
  {% endcompress %}
  

append css
  link(href="{% static 'thirdparty/angular-bootstrap-colorpicker/css/colorpicker.css' %}" rel="stylesheet")
  link(href="{% static 'angular-slider/slider.css' %}" rel="stylesheet")
  
  {% compress css %}
  link(href="{% static 'styles/overlay.styl' %}", rel="stylesheet", type="text/stylus")
  link(href="{% static 'styles/default.styl' %}", rel="stylesheet", type="text/stylus")
  {% endcompress %}


block content

  {% verbatim %}
  #canvasTitle(ng-cloak)
    | {{title}}

  #sidebar(ng-controller="sidebar" ng-cloak)
    
    #diagramProperties
      .diagramProperty
        .label title
        .value
          input(type="text", ng-model="$parent.title", name="label", placeholder="Enter a title for your diagram")

      .diagramProperty
        .label
          | grid 
          span.propertyValue(ng-hide="gridSize == 0")
            | {{gridSize}}
          span.propertyValue(ng-show="gridSize == 0")
            | none

        .value
          slider(floor="0", ceiling="100", step="10", precision="0", ng-model="gridSize")

      .diagramProperty
        span.button.disabled(ng-click="hideGrid = true", ng-show="hideGrid == false",
                             style="margin-right: 10px")
          | hide grid
        span.button.enabled(ng-click="hideGrid = false", ng-show="hideGrid == true",
                             style="margin-right: 10px")
          | show grid
        span.button.disabled(ng-click="hideAnchors = true", ng-show="hideAnchors == false")
          | hide anchors
        span.button.enabled(ng-click="hideAnchors = false" ng-show="hideAnchors == true")
          | show anchors

      .diagramProperty
          span.button.enabled(style="text-transform: none", ng-click="exportDiagram('png')") 
            | Export PNG
          //span.button.enabled(style="text-transform: none", ng-click="exportDiagram('svg')") 
          //  | SVG
          span.button.enabled(style="text-transform: none", ng-click="exportDiagram('latex')") 
            | LaTeX

    
    // WARNING: this id can't change without reflecting it in the javascript
    #undoHistory(ng-controller="undoCtrl", current="{{current}}")

      #historyTitle.panelTitle
        | History
        span.hidePanel(ng-show="showHistory == true", ng-click="showHistory = false")
          | hide
        span.showPanel(ng-show="showHistory == false", ng-click="showHistory = true") 
          | show

      #historyContent(ng-show="showHistory == true", ng-init="showHistory = false")
        .historyItem(ng-repeat="event in queue | reverse", ng-click="goTo(event.id)",
                     ng-class="{current : event.id == current, disabled: event.id > current}")
          span.id 
            | {{event.id}} :
          span.title 
            | {{event.title}}
   
    #toolbar(ng-cloak)

      #palette(ng-hide="selectedElements != false || selectedElement != false", 
               ng-init="selectedElement=false")
        #paletteTitle
          | item palette
        #paletteBody
          | Drag and drop items to add them to a canvas
        table#paletteItems(cellspacing="20px", style="margin: -20px")
          tr
            td
              img.paletteItem(element="fermion", src="/static/images/line.png")
            td
              img.paletteItem(element="circle", src="/static/images/circle.png")
          tr
            td
              img.paletteItem(element="electroweak", src="/static/images/em.png")
            td
              img.paletteItem(element="gluon", src="/static/images/gluon.png")
          tr
            td
              img.paletteItem(element="dashed", src="/static/images/dashed.png")
            td
              img.paletteItem(element="text", src="/static/images/text.png")
        #showStartingPatterns.button(onclick="showPatterns()") patterns...
        #credit
          | by 
          a(href="http://alec.aivazis.com" target="_blank")
            | Alec Aivazis
                
      #selectedElementProperties(ng-show="selectedElement != false")

        #anchorProperties.propertiesMenu(ng-show="type == 'anchor'")
          .property
            color-picker(model="color")
          .property
            slider(floor="1.0", ceiling="10", step="1", precision="1",  ng-model="radius", 
                   style="width: 82%")
            | &nbsp; {{radius}}
          .property
            span.button(ng-click="selectedElement.fixed = true", style="width: 148px",
                        ng-show="selectedElement.fixed == false")
              | fix anchor to canvas
            span.button.disabled(ng-click="selectedElement.fixed = false", style="width: 148px",
                                 ng-show="selectedElement.fixed == true")
              | unfix anchor from canvas
          .property
            span.button.delete(ng-click="removeSelectedElements()")
              | delete this anchor

        #lineProperties.propertiesMenu(ng-show="type == 'line'" )

          .property
            input(type="text", ng-model="selectedElement.label", name="label",
                  placeholder="Enter a label")

          .property.colorPicker
            color-picker(model="color")

          .property
            slider(floor="1.0", ceiling="10", step=".2", precision="1",  ng-model="width",
                      style="width: 82%")
            | &nbsp; {{selectedElement.width}}

          .property
            select(ng-model="selectedElement.style")
              option(value='fermion') fermion
              option(value='dashed') dashed
              option(value='gluon') gluon
              option(value='electroweak') electroweak
              option(value='gluino') gluino
              option(value='sfermion') sfermion

          .property(ng-show="selectedElement.style == 'fermion' || selectedElement.style == 'dashed'")
            span.button(ng-click="selectedElement.drawArrow = true", ng-show="selectedElement.drawArrow == false", style="width: 149px")
              | show arrow
            span.button.disabled(ng-click="selectedElement.drawArrow = false", 
                        ng-show="selectedElement.drawArrow == true", style="margin-right: 10px")
              | hide arrow
            span.button(ng-click="selectedElement.flipArrow = !selectedElement.flipArrow",
                        ng-show="selectedElement.drawArrow == true", style="width: 58px")
              | flip
          
          .property(ng-show="selectedElement.style == 'gluon' || selectedElement.style == 'electroweak' || selectedElement.style == 'gluino'  || selectedElement.style == 'sfermion'")
            span.button(ng-click="selectedElement.loopDirection = 0 - selectedElement.loopDirection",
                        style="width: 150px", ng-show="selectedElement.style == 'gluon' || selectedElement.style =='gluino'")
              | invert loop direction
            span.button(ng-click="selectedElement.loopDirection = 0 - selectedElement.loopDirection",
                        style="width: 150px", ng-show="selectedElement.style == 'electroweak' || selectedElement.style =='sfermion'")
              | invert amplitude

          .property(ng-show="selectedElement.style == 'gluon'")
            span.button.disabled(ng-show="selectedElement.drawEndCaps == true",
                        ng-click="selectedElement.drawEndCaps = false", style="width: 150px")
              | hide end caps
            span.button(ng-show="selectedElement.drawEndCaps == false", 
                        ng-click="selectedElement.drawEndCaps = true", style="width: 150px")
              | draw end caps


          .property
            span.button.delete(ng-click="removeSelectedElements()")
              | delete this line

      #circleProperties.propertiesMenu(ng-show="type == 'circle'")
        .property
          color-picker(model="color")
        
        .property
          slider(floor="0", ceiling="100", step="5", precision="0",  ng-model="radius", 
                 style="width: 80%")
          |  &nbsp; {{radius}}

        .property
          select(ng-model="selectedElement.style")
            option(value='parton') parton

        .property
          span.button.delete(ng-click="removeSelectedElements()")
            | delete this constraint
      
      #textProperties.propertiesMenu(ng-show="type == 'text'")
        .property
          input(type="text", ng-model="selectedElement.text", name="label" placeholder="text!")

        .property
          span.button.delete(ng-click="removeSelectedElements()")
            | delete this text field

      #groupProperties(ng-hide="selectedElements == false", ng-init="selectedElements = false")
        #anchorGroup(ng-show="selectedElements.anchor.length > 0")
          .groupTitle(ng-show="selectedElements.anchor.length > 1")
            | {{selectedElements.anchor.length}} anchors selected
          .groupTitle(ng-show="selectedElements.anchor.length == 1")
            | {{selectedElements.anchor.length}} anchor selected

          .property
            color-picker(model="groupAnchorColor")

          .property
            slider(floor="1.0", ceiling="10", step=".2", precision="1",  ng-model="groupAnchorRadius", 
                   style="width: 75%", ng-init="groupAnchorRadius = -1")
            span(ng-hide="groupAnchorRadius == -1")
              | &nbsp; {{groupAnchorRadius}}
          
          .property(ng-show="selectedElements.anchor.length > 1")
            span.button(ng-click="alignGroup('vertical')", style="width: 150px")
              | align vertically

          .property(ng-show="selectedElements.anchor.length > 1")
            span.button(ng-click="alignGroup('horizontal')", style="width: 150px")
              | align horizontally

        #lineGroup(ng-show="selectedElements.line.length > 0")
          .groupTitle(ng-show="selectedElements.line.length > 1")
            | {{selectedElements.line.length}} lines selected
          .groupTitle(ng-show="selectedElements.line.length == 1")
            | {{selectedElements.line.length}} line selected

          .property.colorPicker
            color-picker(model="groupLineColor")

          .property
            slider(floor="1.0", ceiling="10", step=".2", precision="1",  ng-model="groupSize", 
                   style="width: 75%", ng-init="groupSize = -1")
            span(ng-show="groupSize != -1")
              | &nbsp; {{groupSize}}
            

        #constraintGroup(ng-show="selectedElements.circle.length > 0")
          .groupTitle(ng-show="selectedElements.circle.length > 1")
            | {{selectedElements.circle.length}} circles selected
          .groupTitle(ng-show="selectedElements.circle.length == 1")
            | {{selectedElements.circle.length}} circle selected
          
          .property.colorPicker
            color-picker(model="groupCircleColor")

          .property
            slider(floor="0", ceiling="100", step="5", precision="0",  ng-model="groupCircleRadius", 
                   style="width: 75%", ng-init="groupSize = -1")
            span(ng-show="groupCircleRadius != -1")
              | &nbsp; {{groupCircleRadius}}


    #footer
      #footerTitle.panelTitle
        | Hotkeys/Tips
        span.hidePanel(ng-click="showFooter = !showFooter", ng-show="showFooter == true")
          | hide
        span.showPanel(ng-click="showFooter = !showFooter", ng-show="showFooter == false")
          | show
      #footerContent(ng-show="showFooter == true", ng-init="showFooter = true")
        .hotkey
          span.hotkeyTitle Select element:
          span.hotkeyDescription Left click
        .hotkey
          span.hotkeyTitle Select multiple elements:
          span.hotkeyDescription Drag on canvas
        .hotkey
          span.hotkeyTitle New anchor:
          span.hotkeyDescription alt + click
        .hotkey
          span.hotkeyTitle New propagator:
          span.hotkeyDescription alt + drag
        .hotkey
          span.hotkeyTitle New branch:
          span.hotkeyDescription alt + drag from an existing element
        .hotkey
          span.hotkeyTitle Move element/label:
          span.hotkeyDescription Drag
        .hotkey
          span.hotkeyTitle Delete selected element:
          span.hotkeyDescription bkspace or delete
        .hotkey
          span.hotkeyTitle Constrain element to circle:
          span.hotkeyDescription Drag from pallet and drop on anchor or alt + drag from existing circle
        .hotkey
          span.hotkeyTitle Undo:
          span.hotkeyDescription ctrl + z
        .hotkey
          span.hotkeyTitle Redo:
          span.hotkeyDescription shift + ctrl + z
        .hotkey
          span.hotkeyTitle Pan:
          span.hotkeyDescription space + drag
        .hotkey
          span.hotkeyTitle Zoom:
          span.hotkeyDescription scroll wheel

      // alt dragging moving the window instead 
      // gsettings set org.gnome.desktop.wm.preferences mouse-button-modifier "<Super>"

  #mainContent
    svg#canvas
    
  // the template for the starting pattern select window
  script#patternSelect_template(type="text/x-handlebars-template")
    #patternSelect
      .modalTitle
        span.closeModal(onclick="closeOverlay()")
          | x
        | Select starting template...
        span#togglePatternsOnStartup(onclick="toggleShowStartingPatterns()")
          | show at startup
          input#patternsOnStartup(type="checkbox")
          
      .modalBody
        | {{#each patterns}}
        |   {{pattern}}
        | {{/each}}

  // the template for displaying the result of exporting to latex
  script#exportLatex_template(type="text/x-handlebars-template")
    #latexExport
      .modalTitle
        span.closeModal(onclick="closeOverlay()")
            | x
        | Export to LaTeX
      .modalBody
        .step
          .title Add this to your preamble:
          .body \usepackage{feynman}

        .step
          .title Here's your diagram:
          .body {{{docString}}}
        .toolbar
          span.button.disabled(onclick="closeOverlay()", style="margin-right: 5px")
            | close
          a(href="/static/misc/feynman.sty")
            span.button
              | Download LaTeX package

  {% endverbatim %}

              


//- end of file
